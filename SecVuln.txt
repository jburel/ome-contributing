Security Vulnerability
======================


**To test in**: CLI

**Purpose of the test** is to check the security vulnerability

.. note::
    This scenario assumes tests are running against a local server on the
    default port and the root password is omero. If this is not the case, the
    root connection line needs to be replaced with::

      $ bin/omero login root@hostname:port -w root_password

#. Setup a 4.4.11/5.0.4 server

#. Download the 4.4.11/5.0.4 CLI or use the one with the server

#. Create a group for testing the user creation::

     $ bin/omero login root@localhost:4064 -w omero
     $ bin/omero group add secvuln_test

#. Create a user with no password via the CLI with interactive password prompt::

      $ bin/omero login root@localhost:4064 -w omero
      $ bin/omero user add secvuln_no_password secvuln_no_password secvuln_no_password secvuln_test --no-password

   - Try logging in with ``$ bin/omero login -C -u secvuln_no_password -w anypassword``
   - |C| a session is created

#. Create a user via the CLI with interactive password prompt::

      $ bin/omero login root@localhost:4064 -w omero
      $ bin/omero user add secvuln_empty secvuln_empty secvuln_empty secvuln_test

   Enter ``ome`` when prompted for the password and confirm it.

   - Try logging in with ``$ bin/omero login -C -u secvuln_empty -w anypassword``
   - |C| a session is created
   - Try logging in with ``$ bin/omero login -C -u secvuln_empty -w ome``
   - |C| a session is created

#. Create a user via the CLI with a full unicode password::

      $ bin/omero login root@localhost:4064 -w omero
      $ bin/omero user add secvuln_unicode secvuln_unicode secvuln_unicode secvuln_test -P ążćę

   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode``
   - Enter ``ążćę`` in the interactive password prompt
   - |C| a session is created
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode -w ążćę``
   - |C| a session is created
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode``
   - Enter ``żćąę`` in the interactive password prompt
   - |C| a session is created
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode -w żćąę``
   - |C| a session is created
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode -w '????'``
   - |C| a session is created
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode -w '??'``
   - |C| the CLI fails to create a session
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode -w '?'``
   - |C| the CLI fails to create a session

#. Upgrade the server to 4.4.12/5.0.5

#. Download the 4.4.12/5.0.5 CLI or use the one with the server. Use this new
   CLI for the following tests.

#. Create a user via the CLI with interactive password prompt::

      $ bin/omero login root@localhost:4064 -w omero
      $ bin/omero user add secvuln_empty_fix secvuln_empty_fix secvuln_empty_fix secvuln_test

   Enter `ome` when prompted for the password.

   - Try logging in with ``$ bin/omero login -C -u secvuln_empty_fix -w anypassword``
   - |C| the CLI fails to create a session
   - Try logging in with ``$ bin/omero login -C -u secvuln_empty_fix -w ome``
   - |C| a session is created

#. Create a user via the CLI with a full unicode password::

      $ bin/omero login root@localhost:4064 -w omero
      $ bin/omero user add secvuln_unicode_fix secvuln_unicode_fix secvuln_unicode_fix secvuln_test -P ążćę

   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode_fix``
   - Enter ``ążćę`` in the interactive password prompt
   - |C| a session is created
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode_fix -w ążćę``
   - |C| a session is created
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode_fix``
   - Enter ``żćąę`` in the interactive password prompt
   - |C| the CLI fails to create a session
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode_fix -w żćąę``
   - |C| the CLI fails to create a session
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode_fix -w '????'``
   - |C| the CLI fails to create a session
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode_fix -w '??'``
   - |C| the CLI fails to create a session
   - Try logging in with ``$ bin/omero login -C -u secvuln_unicode_fix -w '?'``
   - |C| the CLI fails to create a session

#. Create a user with no password via the CLI::

      $ bin/omero login root@localhost:4064 -w omero
      $ bin/omero user add secvuln_no_password_fix secvuln_no_password_fix secvuln_no_password_fix secvuln_test --no-password

   - |C| the CLI throws an exception at creation time

#. Run the SQL script as a sysadmin which lists users with empty passwords::

        $  psql omero -f sql/psql/OMERO5.0__0/list-empty-permission.sql

   - |C| that ``secvuln_empty`` and ``secvuln_no_password`` are listed in the
     output of the SQL script

#. Run the SQL script as a sysadmin which disables users with empty
   passwords::

        $  psql omero -f sql/psql/OMERO5.0__0/fix-empty-permission.sql

   - |C| that ``secvuln_empty`` and ``secvuln_no_password`` are listed in the
	 output of the SQL script and that COMMIT appears in the output
   - Try logging in with ``$ bin/omero login -C -u secvuln_empty -w anypassword``
   - |C| the CLI fails to create a session
   - Try logging in with ``$ bin/omero login -C -u secvuln_empty -w ome``
   - |C| the CLI fails to create a session
   - Try logging in with ``$ bin/omero login -C -u secvuln_no_password -w anypassword``
   - |C| the CLI fails to create a session

#. Optionally, test the `omero.security.password_required` configuration
   property

   - Modify the configuration and restart the server::

      $ bin/omero config set omero.security.password_required false
      $ bin/omero admin restart

   - Create a user with no password via the CLI::

      $ bin/omero login root@localhost:4064 -w omero
      $ bin/omero user add secvuln_no_password_fix secvuln_no_password_fix secvuln_no_password_fix secvuln_test --no-password
   - Try logging in with ``$ bin/omero login -C -u secvuln_no_password -w anypassword``
   - |C| a session created
