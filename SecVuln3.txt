Security Vulnerability 3
========================

.. contents::
   :local:
   :depth: 1

**To test in**: OMERO.web

Django provides easy-to-use protection against Cross Site Request Forgeries. This type of attack occurs when a malicious Web site contains a link, a form button or some javascript that is intended to perform some action on your Web site, using the credentials of a logged-in user who visits the malicious site in their browser.

.. note::
    This scenario assumes an OMERO 5.0.x server.

.. _506secvuln:

Security vulnerability
----------------------------

The tests below should be performed only on 5.0.6 and 5.1.x servers

#. Logging in and out

   - Log in
   - Logout using button
   - Log in again
   - Use link http://HOST_NAME/webclient/logout/.
   - Click on the link "Do you want to logout"
   - Go to http://HOST_NAME/webclient/. You shoudl see login page.

#. Webadmin

   - Create new Group
   - Create new User
   - Assign user to the Group
   - Add group to the User
   - Upload avatar
   - Crop avatar
   - Update MyAccount

#. Webclient

   Import few images
    
   - Add new Project/Dataset/Screen
   - Edit name and/or description of Project/Dataset/Image/Screen/Plate
   - Change channel name
   - Copy, past, reset and revert to owners rendering settings, follow scenario :doc:`/testing_scenarios/Render`
   - Export as OME-TIFF
   - Comment Project/Dataset/Image/Screen/Plate
   - Tag Project/Dataset/Image/Screen/Plate
   - Attach file to Project/Dataset/Image/Screen/Plate
   - Batch Comment Project/Dataset/Image/Screen/Plate
   - Batch Tag Project/Dataset/Image/Screen/Plate
   - Batch Attach file to Project/Dataset/Image/Screen/Plate
   - Edit Tag name and/or description
   - Search from the top main input field
   - Search using advanced search. Try various combinations
   - Share through basket
   - Create discussion through basket
   - Move data between groups
   - Run `export_script/batch_image_export` script
   - Su to the user, follow scenario :doc:`/testing_scenarios/SwitchUser`
